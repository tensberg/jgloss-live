buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

sourceSets {
    main {
        resources {
            srcDirs += 'src/main/angular'
        }
    }
}

jar {
    baseName = 'jgloss-live'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/tensberg/maven'
    }
}

group = 'net.sf.jgloss'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'net.sf.jgloss:jgloss-core:2.1.2'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.google.guava:guava:19.0-rc2'
    compile 'org.webjars.bower:angular-material:1.0.0-rc4'
    compile 'org.webjars.bower:angular-animate:1.4.7'
    compile 'org.webjars.bower:angular-aria:1.4.7'
    compile 'org.webjars.bower:angular-resource:1.4.7'

    testCompile 'junit:junit'
    testCompile 'org.mockito:mockito-core'
    testCompile 'org.assertj:assertj-core:3.2.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

task buildDocker(type: Docker, dependsOn: build) {
    maintainer = 'Michael Koch <tensberg@gmx.net>'
    tag = "tensberg/jgloss-live"
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from 'src/main/dictionaries'
            into new File(stageDir, 'dictionaries')
        }
    }
}

bootRun {
    args = [ '--edictPath=src/main/dictionaries/edict2' ]
}
